---
# tasks file for product

- name: "Update cache"
  ansible.builtin.apt:
    update_cache: yes

- name: "Ensure install Docker"
  ansible.builtin.apt:
    name: docker.io
    state: latest

- name: "Ensure started Docker"
  ansible.builtin.service:
    name: docker
    state: started

- name: "Create folder for docker work images"
  ansible.builtin.file:
    path: '{{ docker_folder }}'
    state: directory
    mode: '0755'

- name: "Copy Dockerfile to remote destination. Copy war|jar files to docker folder can do this, but..."
  ansible.builtin.copy:
    src: "{{ dfile_path }}"
    dest: '{{ docker_folder }}'

- name: "Copy startfile to remote destination"
  ansible.builtin.copy:
    src: "{{ start_file }}"
    dest: '{{ docker_folder }}'

- name: "Download required tomcat"
  ansible.builtin.get_url:
    url: "{{ tomcat_link }}"
    dest: "{{ docker_folder }}"
    checksum: "{{ tomcat_sha }}"
    validate_certs: no

- name: "Create folder for docker tomcat files"
  ansible.builtin.file:
    path: '{{ dcr_javaf_tomcat }}'
    state: directory
    mode: '0755'

#- name: "Get war files from build folder"
#  ansible.builtin.find:
#    path: "{{ git_maven_target }}"
#    use_regex: yes
#    patterns: "^.*?\\.(?:war|jar)$"
#  register: build_files

- name: "Copy war|jar files to docker folder"
  ansible.builtin.copy:
    src: '{{ item.path }}'
    dest: '{{ dcr_javaf_tomcat }}'
    remote_src: yes
  with_items: '{{ build_files.files }}'

- name: "Pull an image from dockerhub"
  community.docker.docker_image:
    name: 'alpine'
    source: pull
    pull:
      platform: 'amd64'

- name: "Build our project image"
  community.docker.docker_image:
    name: 'tomcat:local'
    build:
      path: '{{ docker_folder }}'
    source: build