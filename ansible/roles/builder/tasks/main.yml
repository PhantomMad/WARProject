---
# tasks file for builder
- name: "Update cache"
  ansible.builtin.apt:
    update_cache: yes

- name: "Ensure install git"
  ansible.builtin.apt:
    name: 'git'
    state: present

- name: "Ensure install Java VM"
  ansible.builtin.apt:
    name: default-jdk
    state: latest

- name: "Ensure install Docker"
  ansible.builtin.apt:
    name: docker.io
    state: latest

- name: "Ensure started Docker"
  ansible.builtin.service:
    name: docker
    state: started

- name: "Set env for maven"
  ansible.builtin.lineinfile:
    path: "/etc/environment"
    state: present
    regexp: "^{{ item.key }}="
    line: "{{ item.key }}={{ item.value }}"
  with_items: "{{ maven_env }}"

- name: "Create directory for maven"
  ansible.builtin.file:
    path: "{{ maven_folder }}"
    state: directory
    mode: '0755'

- name: "Create directory for maven archive"
  ansible.builtin.file:
    path: "{{ maven_archive_folder }}"
    state: directory
    mode: '0755'

- name: "Download required maven"
  ansible.builtin.get_url:
    url: "{{ maven_link }}"
    dest: "{{ maven_archive_folder }}"
    checksum: "{{ maven_sha }}"

- name: "Unpack maven archive"
  ansible.builtin.unarchive:
    src: "{{ maven_archive_distr }}"
    dest: "{{ maven_folder }}"
    remote_src: yes
    extra_opts:
      - --strip-components=1

- name: "Create link maven to bin"
  ansible.builtin.file:
    src: "{{ mvn }}"
    dest: '/bin/mvn'
    state: link

- name: "Create directory for gitclone"
  ansible.builtin.file:
    path: "{{ git_clone_tmp }}"
    state: directory
    mode: '0755'

- name: "Clone github repository"
  ansible.builtin.git:
    repo: "{{ git_clone_url }}"
    dest: "{{ git_clone_tmp }}"
    clone: yes
    update: no

- name: "Build java project"
  command: 'mvn package'
  args:
    chdir: "{{ git_clone_tmp }}"

- name: "Create folder for docker work images"
  ansible.builtin.file:
    path: '{{ docker_folder }}'
    state: directory
    mode: '0755'

- name: "Copy Dockerfile to remote destination"
  ansible.builtin.copy:
    src: "{{ dfile_path }}"
    dest: '{{ docker_folder }}'

- name: "Get war files from build folder"
  ansible.builtin.find:
    path: "{{ git_maven_target }}"
    use_regex: yes
    patterns: "^.*?\.(?:war|jar)$"
  register: build_files

- name: "Copy war|jar files to docker folder"
  ansible.builin.copy:
    src: '{{ item.path }}'
    dst: '{{ docker_folder }}'
    remote_src: yes
  with_items: '{{ build_files.files }}'

- name: "Copy war file to docker destination"
  ansible.builtin.copy:
    src: "{{ dfile_path }}"
    dest: '{{ docker_folder }}'